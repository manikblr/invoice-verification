const testInvoiceValidation = async () => {\n  try {\n    const response = await fetch('http://localhost:3000/api/unified_validate_invoice', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        scopeOfWork: \"Installing new ceiling tiles in office space\",\n        serviceLineId: 5, // Assuming 5 is for \"Handyman\" based on common service line IDs\n        serviceTypeId: 12, // Assuming 12 is for \"Ceiling Tiles\" based on common service type IDs\n        laborHours: 2,\n        items: [\n          {\n            name: \"mud\",\n            quantity: 1,\n            unitPrice: 15.99,\n            unit: \"lbs\",\n            type: \"material\"\n          }\n        ],\n        includeAgentTraces: true,\n        includeDetailedExplanations: true,\n        explanationLevel: 2\n      }),\n    });\n\n    const result = await response.json();\n    console.log('Validation Result:', JSON.stringify(result, null, 2));\n    \n    // Check if we have agent traces\n    if (result.agentTraces) {\n      console.log('\\nAgent Execution Order:');\n      // Sort by startTime to show actual execution order\n      const sortedAgents = result.agentTraces.sort((a, b) => \n        new Date(a.startTime).getTime() - new Date(b.startTime).getTime()\n      );\n      \n      sortedAgents.forEach((agent, index) => {\n        console.log(`${index + 1}. ${agent.agentName} (${agent.agentStage})`);\n        console.log(`   Status: ${agent.status}`);\n        console.log(`   Execution Time: ${agent.executionTime}ms`);\n        console.log(`   Confidence: ${agent.confidenceScore ? (agent.confidenceScore * 100).toFixed(1) + '%' : 'N/A'}`);\n        if (agent.decisionRationale) {\n          console.log(`   Decision: ${agent.decisionRationale}`);\n        }\n        console.log('');\n      });\n    }\n    \n    // Check line item results\n    if (result.lines && result.lines.length > 0) {\n      console.log('\\nLine Item Results:');\n      result.lines.forEach((line, index) => {\n        console.log(`${index + 1}. ${line.input.name}`);\n        console.log(`   Status: ${line.status}`);\n        console.log(`   Confidence: ${(line.confidenceScore * 100).toFixed(1)}%`);\n        console.log(`   Explanation: ${line.explanation.summary}`);\n        console.log('');\n      });\n    }\n    \n  } catch (error) {\n    console.error('Error testing invoice validation:', error);\n  }\n};\n\ntestInvoiceValidation();